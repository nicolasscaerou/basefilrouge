openapi: 3.0.2
info:
  title: SIO API
  version: "1.0"
  description: 'Spécifications de l''API FILrouge'
  termsOfService: https://www.centralesupelec.fr
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Lien vers le rapport du projet
  url: /rapport
servers:
  - url: http://99.81.225.203:56056/api
tags:
  - name: fichier
    description: Conversion de fichiers en Json
    externalDocs:
      description: Rapport de ce projet
      url: 'http://99.81.225.203:56056/rapport'
  - name: hello
    description: fonction de test
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /fichier:
    post:
      tags:
        - fichier
      summary: Depose un fichier, le stocke sur S3 et le renvoie traduit en Json
      description: Envoi limité à 10Mo par fichier. Le fichier sera traduit en JSON, en fonction de son type, puis stocké et retourné à l'envoyeur. Il contiendra des données de base sur le type de fichier, mais également des meta-donnees propres au type, et les donnees brutes du fichier. Si c'est un YAML, les donnees brutes seront transformées en pur JSON. Si c'est une Image, les metadonnes comprendront, outre la taille et d'autres donnees communes, des éléments de reconnaissance de labels et de célébrités aux travers des services AWS...
      operationId: controllers.fichier_ctrl.fichier_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: base64
      responses:
        '201':
          description: Fichier converti avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fichier'
          links:
            GetFichier:
              operationId: controllers.fichier_ctrl.fichier_get
              parameters:
                idFichier: 'idFichier'
              description: >
                The `id` value returned in the response can be used as
                the `idFichier` parameter in `GET /fichier/{idFichier}`.
        '500':
          description: Erreur à la conversion
  '/fichier/{idFichier}':
    get:
      tags:
        - fichier
      summary: retrouver un fichier précédemment uploadé
      description: renvoi un fichier json d'un fichier déjà enregistré sur le serveur
      operationId: controllers.fichier_ctrl.fichier_get
      parameters:
        - name: idFichier
          in: path
          description: ID du json à retourner
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fichier retrouvé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fichier'
        '400':
          description: Mauvaise requête
        '404':
          description: Fichier non trouvé
    delete:
      tags:
        - fichier
      summary: retrouver un fichier précédemment uploadé et le supprimer
      description: renvoi une dernière fois, avant suppression, un fichier JSON d'un fichier déjà déposé sur le serveur.
      operationId: controllers.fichier_ctrl.fichier_delete
      parameters:
        - name: idFichier
          in: path
          description: ID du json à retourner et supprimer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fichier retrouvé et supprimé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fichier'
        '400':
          description: Mauvaise requête
        '404':
          description: Fichier non trouvé
components:
  schemas:
    Fichier:
      type: object
      properties:
#donnees communes à chaque fichier
        idFic:
          type: string
          example: 6cef510edf046c94085eeb6b2505b3ed
        nomFic:
          type: string
          example: image2019.jpg
        mimeType:
          type: string
          example: image/jpeg
        taille:
          type: integer
          example: 4111982
        extension:
          type: string
          example: jpg
        dateConversion:
          type: string
          format: date-time
#particularite à chaque fichier
        metaDonnees:
          type: object
          additionalProperties: {}
        donnees:
          type: object
          additionalProperties: {}
        hateOas:
          type: object
          properties:
            method:
              type: string
            url:
              type: string
            urn:
              type: string
